name: Total Repository Auto-Cleanup
on: 
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

permissions:
  actions: write
  contents: write

jobs:
  total-cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Delete all caches
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const caches = await github.paginate(github.rest.actions.getActionsCacheList, { owner, repo });
            for (const cache of caches) {
              await github.rest.actions.deleteActionsCacheById({
                owner,
                repo,
                cache_id: cache.id
              });
            }

      - name: Delete all releases
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const releases = await github.paginate(github.rest.repos.listReleases, { owner, repo });
            for (const release of releases) {
              await github.rest.repos.deleteRelease({
                owner,
                repo,
                release_id: release.id
              });
            }

      - name: Delete all tags
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const tags = await github.paginate(github.rest.repos.listTags, { owner, repo });
            for (const tag of tags) {
              await github.rest.git.deleteRef({
                owner,
                repo,
                ref: `tags/${tag.name}`
              });
            }

      - name: Delete all workflow runs
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const currentRunId = ${{ github.run_id }};
            const workflows = await github.paginate(github.rest.actions.listRepoWorkflows, { owner, repo });
            for (const workflow of workflows) {
              const runs = await github.paginate(github.rest.actions.listWorkflowRuns, {
                owner,
                repo,
                workflow_id: workflow.id,
                per_page: 100
              });
              for (const run of runs) {
                if (run.id === currentRunId) continue;
                try {
                  await github.rest.actions.deleteWorkflowRun({
                    owner,
                    repo,
                    run_id: run.id
                  });
                } catch (error) {}
              }
            }

      - name: Cleanup completion
        run: echo "Repository cleanup completed"

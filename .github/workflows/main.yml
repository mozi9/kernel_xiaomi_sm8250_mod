name: Cache Manager

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次
  workflow_dispatch:

permissions:
  actions: write

jobs:
  manage-caches:
    runs-on: ubuntu-latest
    steps:
      - name: Get cache count
        id: cache-count
        uses: actions/github-script@v6
        with:
          script: |
            // 简化的缓存计数脚本
            try {
              const { owner, repo } = context.repo;
              const response = await github.rest.actions.getActionsCacheList({ owner, repo });
              const count = response.data.total_count;
              return `CacheCount=${count}`;
            } catch (error) {
              core.setFailed(`Error: ${error.message}`);
              return 'CacheCount=0';
            }
          result-encoding: string

      - name: Extract cache count
        id: extract-count
        run: |
          RESULT="${{ steps.cache-count.outputs.result }}"
          COUNT="${RESULT#CacheCount=}"
          echo "count=$COUNT" >> $GITHUB_OUTPUT
          echo "Detected $COUNT caches"

      - name: Clear all caches if over 13
        if: ${{ steps.extract-count.outputs.count > 13 }}
        uses: actions/github-script@v6
        with:
          script: |
            // 简化版清空缓存脚本
            const { owner, repo } = context.repo;
            const response = await github.rest.actions.getActionsCacheList({ owner, repo });
            const cacheIds = response.data.actions_caches.map(c => c.id);
            
            for (const id of cacheIds) {
              await github.rest.actions.deleteActionsCacheById({ owner, repo, cache_id: id });
            }
            
            return `Cleared ${cacheIds.length} caches`;
          result-encoding: string
